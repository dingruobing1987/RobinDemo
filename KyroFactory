public final class KyroFactory
{
    private static final Logger logger = Logger.getLogger( KyroFactory.class );

    private final GenericObjectPool<Kryo> kryoPool;

    public KyroFactory()
    {
        PooledKryoFactory pooledKryoFactory = new PooledKryoFactory();

        kryoPool = new GenericObjectPool<Kryo>( pooledKryoFactory );
    }

    public KyroFactory( final int maxTotal,final int minIdle,final long maxWaitMillis,
            final long minEvictableIdleTimeMillis )
    {
        kryoPool = new GenericObjectPool<Kryo>( new PooledKryoFactory() );
        GenericObjectPoolConfig config = new GenericObjectPoolConfig();
        config.setMaxTotal( maxTotal );
        config.setMinIdle( minIdle );
        config.setMaxWaitMillis( maxWaitMillis );
        config.setMinEvictableIdleTimeMillis( minEvictableIdleTimeMillis );
        kryoPool.setConfig( config );
    }

    public Kryo getKryo()
    {
        try
        {
            return kryoPool.borrowObject();
        } catch ( final Exception ex )
        {
            logger.error( ex.getMessage(), ex );
            throw new RuntimeException( ex );
        }
    }

    public void returnKryo( final Kryo kryo )
    {
        kryoPool.returnObject( kryo );
    }
}
